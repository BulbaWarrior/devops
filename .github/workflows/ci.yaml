name: ci

on: 
  pull_request:
  push:
    branches: 
      - master
      - cicd/gh_actions

env:
  IMAGE: falcon
  REGISTRY: bulbawarrior
  
jobs:
  lint_and_test:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Restore cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            app_python/__pycache__
            app_python/.pytest_cache
          key: ${{ runner.os }}-pycache-${{ hashFiles('app_python/**.py') }}
          restore-keys: |
            ${{ runner.os }}-pycache
          
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.9
          
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.1.8
        
      - name: Install dependencies
        run: |
          cd app_python
          poetry install
        
      - name: Run linter
        continue-on-error: true
        run: |
          cd app_python
          echo ::add-matcher::.github/flake8_matcher.json
          poetry run flake8
        
      - name: Run tests
        run: |
          cd app_python
          poetry run pytest -v
        
  build:
    name: Build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint_and_test]
 
    steps:
      - name: Debug
        run: echo ${{ github.ref }}
        
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Docker login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build Docker image
        run: |
          cd app_python
          docker build . -t ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}
          
      - name: Publish Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE }}:latest
